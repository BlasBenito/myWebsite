pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
filterable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = FALSE,
wrap = FALSE,
showSortable = TRUE,
fullWidth = FALSE
)
df_stats |>
dplyr::select(name, min, q1, median, q3, max, sd, range, iq_range, skewness, kurtosis) |>
dplyr::mutate(dplyr::across(dplyr::where(is.numeric), ~ round(.x, 2))) |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
filterable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = FALSE,
wrap = FALSE,
showSortable = TRUE,
fullWidth = TRUE,
defaultColDef = colDef(width = "auto")
)
help(colDef)
covid_prevalence |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
filterable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = FALSE,
wrap = FALSE,
showSortable = TRUE,
fullWidth = FALSE
)
df_stats <- distantia::tsl_stats(
tsl = tsl,
lags = 1:6 #weeks
)
df_stats |>
dplyr::select(name, min, q1, median, q3, max, sd, range, iq_range, skewness, kurtosis) |>
dplyr::mutate(dplyr::across(dplyr::where(is.numeric), ~ round(.x, 2))) |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
df_stats <- distantia::tsl_stats(
tsl = tsl,
lags = 1:6 #weeks
)
df_stats |>
select(name, dplyr::contains("lag")) |>
dplyr::mutate(dplyr::across(dplyr::where(is.numeric), ~ round(.x, 2))) |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = TRUE
)
df_stats <- df_stats |>
dplyr::inner_join(
y = covid_counties
)
knitr::opts_chunk$set(
fig.width = 8,
fig.height = 6
)
library(distantia)
library(zoo)
library(dplyr)
library(mapview)
library(gt)
library(reactable)
library(dygraphs)
la_population <- mapview(
covid_counties,
zcol = "population",
label = "name"
)
htmlwidgets::saveWidget(
la_population@map,
file = "la_population.html",
selfcontained = TRUE
)
covid_prevalence |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
tsl <- distantia::tsl_initialize(
x = covid_prevalence,
name_column = "name",
time_column = "time"
)
names(tsl)
attributes(tsl[[1]])$name
attributes(tsl[[2]])$name
zoo::index(tsl[["Alameda"]]) |>
head()
zoo::coredata(tsl[["Alameda"]]) |>
head()
distantia::tsl_plot(
tsl = tsl,
columns = 3,
guide = FALSE,
text_cex = 1.2
)
distantia::tsl_plot(
tsl = tsl_subset(
tsl = tsl,
names = c("Los_Angeles", "Kings"),
time = c("2021-09-01", "2022-01-31")
),
guide = FALSE
)
distantia::zoo_plot(
x = tsl$Los_Angeles
)
dygraphs::dygraph(
data = cbind(tsl$Los_Angeles, tsl$Kings),
ylab = "Covid-19 Prevalence"
)
df_time <- distantia::tsl_time(
tsl = tsl
)
df_time |>
dplyr::select(name, class, units, length, resolution, begin, end) |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
df_stats <- distantia::tsl_stats(
tsl = tsl,
lags = 1:6 #weeks
)
df_stats |>
dplyr::select(name, min, q1, median, q3, max, sd, range, iq_range, skewness, kurtosis) |>
dplyr::mutate(dplyr::across(dplyr::where(is.numeric), ~ round(.x, 2))) |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
df_stats |>
select(name, dplyr::contains("lag")) |>
dplyr::mutate(dplyr::across(dplyr::where(is.numeric), ~ round(.x, 2))) |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = TRUE
)
df_stats <- df_stats |>
dplyr::inner_join(
y = covid_counties,
by = "name"
)
colnames(df_stats)
mapview(
df_stats,
zcol = "sd",
label = "name"
)
df_stats |>
select(name, dplyr::contains("lag")) |>
dplyr::mutate(dplyr::across(dplyr::where(is.numeric), ~ round(.x, 2))) |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = TRUE
)
df_stats <- distantia::tsl_stats(
tsl = tsl,
lags = 1:6 #weeks
)
covid_counties <- covid_counties |>
dplyr::inner_join(
y = df_stats,
by = "name"
)
mapview(
df_stats,
zcol = "sd",
label = "name"
)
mapview(
covid_counties,
zcol = "sd",
label = "name"
)
mapview(
covid_counties,
zcol = "max",
label = "name"
)
mapview(
covid_counties,
zcol = "max",
label = "name",
col.regions = viridis::turbo()
)
mapview(
covid_counties,
zcol = "max",
label = "name",
col.regions = viridis::turbo(n = 100)
)
mapview(
covid_counties,
zcol = "max",
label = "name"
)
help(mapview)
mapviewGetOption("vector.palette")
mapview(
covid_counties,
zcol = "max",
label = "name",
color = grDevices::hcl.colors(n, palette = "viridis")
)
mapview(
covid_counties,
zcol = "max",
label = "name",
color = grDevices::hcl.colors(n = 10, palette = "viridis")
)
mapview(
covid_counties,
zcol = "max",
label = "name",
col.regions = grDevices::hcl.colors(n = 10, palette = "viridis")
)
mapview(
covid_counties,
zcol = "max",
label = "name",
col.regions = grDevices::hcl.colors(n = 10, palette = "Zissou 1")
)
mapview(
covid_counties,
zcol = "max",
label = "name",
col.regions = grDevices::hcl.colors(n = nrow(covid_counties), palette = "Zissou 1")
)
mapview(
covid_counties,
zcol = "max",
label = "name",
col.regions = grDevices::hcl.colors(n = 100, palette = "Zissou 1")
)
mapview(
covid_counties,
zcol = "max",
label = "name",
col.regions = grDevices::hcl.colors(n = 5, palette = "Zissou 1")
)
max_prevalence <- mapview(
covid_counties,
zcol = "max",
label = "name",
col.regions = grDevices::hcl.colors(n = 5, palette = "Zissou 1")
)
htmlwidgets::saveWidget(
max_prevalence@map,
file = "la_population.html",
selfcontained = TRUE
)
blogdown::serve_site()
library(blogdown)
build_site()
serve_site()
mapview(
covid_counties,
zcol = "max",
label = "name",
col.regions = grDevices::hcl.colors(n = 5, palette = "Zissou 1")
)
knitr::opts_chunk$set(
fig.width = 8,
fig.height = 6
)
library(distantia)
library(zoo)
library(dplyr)
library(mapview)
library(gt)
library(reactable)
library(dygraphs)
la_population <- mapview(
covid_counties,
zcol = "population",
label = "name"
)
htmlwidgets::saveWidget(
la_population@map,
file = "la_population.html",
selfcontained = TRUE
)
covid_prevalence |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
tsl <- distantia::tsl_initialize(
x = covid_prevalence,
name_column = "name",
time_column = "time"
)
names(tsl)
attributes(tsl[[1]])$name
attributes(tsl[[2]])$name
zoo::index(tsl[["Alameda"]]) |>
head()
zoo::coredata(tsl[["Alameda"]]) |>
head()
distantia::tsl_plot(
tsl = tsl,
columns = 3,
guide = FALSE,
text_cex = 1.2
)
distantia::tsl_plot(
tsl = tsl_subset(
tsl = tsl,
names = c("Los_Angeles", "Kings"),
time = c("2021-09-01", "2022-01-31")
),
guide = FALSE
)
distantia::zoo_plot(
x = tsl$Los_Angeles
)
dygraphs::dygraph(
data = cbind(tsl$Los_Angeles, tsl$Kings),
ylab = "Covid-19 Prevalence"
)
df_time <- distantia::tsl_time(
tsl = tsl
)
df_time |>
dplyr::select(name, class, units, length, resolution, begin, end) |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
df_stats <- distantia::tsl_stats(
tsl = tsl,
lags = 1:6 #weeks
)
df_stats |>
dplyr::select(name, min, q1, median, q3, max, sd, range, iq_range, skewness, kurtosis) |>
dplyr::mutate(dplyr::across(dplyr::where(is.numeric), ~ round(.x, 2))) |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
df_stats |>
select(name, dplyr::contains("lag")) |>
dplyr::mutate(dplyr::across(dplyr::where(is.numeric), ~ round(.x, 2))) |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = TRUE
)
covid_counties <- covid_counties |>
dplyr::inner_join(
y = df_stats,
by = "name"
)
mapview::mapview(
covid_counties,
zcol = "max",
label = "name",
col.regions = grDevices::hcl.colors(n = 5, palette = "Zissou 1")
)
mapview::mapview(
covid_counties,
zcol = "max",
label = "name",
col.regions = grDevices::hcl.colors(n = 5, palette = "Zissou 1"),
region.alpha = 1
)
mapview::mapview(
covid_counties,
zcol = "max",
label = "name",
col.regions = grDevices::hcl.colors(n = 5, palette = "Zissou 1"),
alpha.regions = 1
)
mapview::mapview(
covid_counties,
zcol = "max",
label = "name"
)
mapview::mapview(
covid_counties,
zcol = "max",
label = "name",
col.regions = grDevices::hcl.colors(n = 5, palette = "Zissou 1")
)
