)
tsl_smol |>
distantia::distantia_ls() |>
dplyr::mutate(
psi = round(psi, 2)
) |>
reactable::reactable(
resizable = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
tsl_smol |>
distantia::distantia_dtw() |>
dplyr::mutate(
psi = round(psi, 2)
) |>
reactable::reactable(
resizable = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
distantia::distantia_dtw_plot(
tsl = tsl_smol[, c("San_Francisco", "Solano")]
)
distantia::distantia_dtw_plot(
tsl = tsl_smol[c("San_Francisco", "Solano")]
)
distantia::distantia_dtw_plot(
tsl = tsl_smol[c("San_Francisco", "Solano")]
)
distantia::distantia_dtw_plot(
tsl = tsl_smol[c("San_Francisco", "Solano")]
)
tsl_smol |>
distantia::distantia_ls() |>
dplyr::mutate(
psi = round(psi, 3)
) |>
reactable::reactable(
resizable = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
tsl_smol |>
distantia::distantia_dtw() |>
dplyr::mutate(
psi = round(psi, 3)
) |>
reactable::reactable(
resizable = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
help("distantia_dtw_plot")
distantia::distantia_dtw_plot(
tsl = tsl_smol[c("San_Francisco", "Solano")],
matrix_type = "distance"
)
distantia::distantia_dtw_plot(
tsl = tsl_smol[c("San_Francisco", "Solano")]
)
xy_dtw <- dtw::dtw(
x = tsl_smol$Solano$prevalence,
y = tsl_smol$San_Francisco$prevalence,
keep = TRUE
)
plot(xy_dtw, type = "twoway")
library(dtw)
help(plot)
help("plot.dtw")
xy_dtw <- dtw::dtw(
x = tsl_smol$Solano$prevalence,
y = tsl_smol$San_Francisco$prevalence,
keep = TRUE
)
dtw::dtwPlotTwoWay(xy_dtw, type = "twoway")
xy_dtw <- dtw::dtw(
x = tsl_smol$Solano$prevalence,
y = tsl_smol$San_Francisco$prevalence,
keep = TRUE
)
dtw::dtwPlotTwoWay(xy_dtw, type = "twoway")
xy_dtw <- dtw::dtw(
x = tsl_smol$Solano$prevalence,
y = tsl_smol$San_Francisco$prevalence,
keep = TRUE
)
dtw::dtwPlotTwoWay(xy_dtw)
xy_dtw <- dtw::dtw(
x = tsl_smol$Solano$prevalence,
y = tsl_smol$San_Francisco$prevalence,
keep = TRUE
)
dtw::dtwPlotTwoWay(xy_dtw, offset = 0.5)
xy_dtw <- dtw::dtw(
x = tsl_smol$Solano$prevalence,
y = tsl_smol$San_Francisco$prevalence,
keep = TRUE
)
dtw::dtwPlotTwoWay(xy_dtw, offset = 0.5)
xy_dtw <- dtw::dtw(
x = tsl_smol$Solano$prevalence,
y = tsl_smol$San_Francisco$prevalence,
keep = TRUE
)
dtw::dtwPlotTwoWay(xy_dtw, offset = 0.5)
knitr::opts_chunk$set(
fig.width = 8,
fig.height = 6
)
library(distantia)
library(dtw)
library(zoo)
library(dplyr)
library(mapview)
library(reactable)
library(dygraphs)
la_population <- mapview(
covid_counties,
zcol = "population",
label = "name"
)
htmlwidgets::saveWidget(
la_population@map,
file = "la_population.html",
selfcontained = TRUE
)
covid_prevalence |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
tsl <- distantia::tsl_initialize(
x = covid_prevalence,
name_column = "name",
time_column = "time"
)
names(tsl)
attributes(tsl[[1]])$name
attributes(tsl[[2]])$name
zoo::index(tsl[["Alameda"]]) |>
head()
zoo::coredata(tsl[["Alameda"]]) |>
head()
distantia::tsl_plot(
tsl = tsl,
columns = 3,
guide = FALSE,
text_cex = 1.2
)
distantia::tsl_plot(
tsl = tsl_subset(
tsl = tsl,
names = c("Los_Angeles", "Kings"),
time = c("2021-09-01", "2022-01-31")
),
guide = FALSE
)
distantia::zoo_plot(
x = tsl$Los_Angeles
)
dygraphs::dygraph(
data = cbind(tsl$Los_Angeles, tsl$Kings),
ylab = "Covid-19 Prevalence"
)
df_time <- distantia::tsl_time(
tsl = tsl
)
df_time |>
dplyr::select(name, class, units, length, resolution, begin, end) |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
df_stats <- distantia::tsl_stats(
tsl = tsl,
lags = 1:6 #weeks
)
df_stats |>
dplyr::select(name, min, q1, median, q3, max, sd, range, iq_range, skewness, kurtosis) |>
dplyr::mutate(dplyr::across(dplyr::where(is.numeric), ~ round(.x, 2))) |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
df_stats |>
select(name, dplyr::contains("lag")) |>
dplyr::mutate(dplyr::across(dplyr::where(is.numeric), ~ round(.x, 2))) |>
dplyr::rename_with(~ gsub("ac_", "", .)) |>
dplyr::rename_with(~ gsub("_", "", .)) |>
reactable::reactable(
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = TRUE
)
covid_counties <- dplyr::inner_join(
x = covid_counties,
y = df_stats,
by = "name"
)
max_prevalence <- mapview(
covid_counties,
zcol = "max",
label = "name",
col.regions = grDevices::hcl.colors(n = 5, palette = "Zissou 1")
)
htmlwidgets::saveWidget(
max_prevalence@map,
file = "la_population.html",
selfcontained = TRUE
)
tsl_smol <- distantia::tsl_subset(
tsl = tsl,
names = c("San_Francisco", "Napa", "Solano"),
time = c("2021-01-01", "2023-01-01")
)
distantia::tsl_plot(
tsl = tsl_smol,
guide = FALSE,
text_cex = 1.3
)
tsl_smol |>
distantia::distantia_ls() |>
dplyr::mutate(
psi = round(psi, 3)
) |>
reactable::reactable(
resizable = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
tsl_smol |>
distantia::distantia_dtw() |>
dplyr::mutate(
psi = round(psi, 3)
) |>
reactable::reactable(
resizable = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
xy_dtw <- dtw::dtw(
x = tsl_smol$Solano$prevalence,
y = tsl_smol$San_Francisco$prevalence,
keep = TRUE
)
dtw::dtwPlotTwoWay(xy_dtw, offset = 0.5)
#lock-step
psi_ls <- distantia::distantia_ls(tsl = tsl)
#dynamic time warping
psi_dtw <- distantia::distantia_dtw(tsl = tsl)
help(distantia_ls)
#lock-step
psi_ls <- distantia::distantia_ls(
tsl = tsl
)
#dynamic time warping
psi_dtw <- distantia::distantia_dtw(
tsl = tsl
)
help(distantia)
psi_ls
#lock-step
psi_ls_ <- distantia::distantia(
tsl = tsl,
lock_step = TRUE
)
#dynamic time warping
psi_dtw_ <- distantia::distantia(
tsl = tsl
)
plot(psi_ls$psi, psi_ls_$psi)
plot(psi_dtw$psi, psi_dtw_$psi)
temp_df <- psi_dtw |>
dplyr::select(x, y, psi) |>
dplyr::inner_join(
y = dplyr::select(psi_ls, x, y, psi),
by = c("x", "y")
) |>
dplyr::transmute(
x, y,
`psi_dtw` = round(psi.x, 3),
psi_ls = round(psi.y, 3)
)
reactable::reactable(
temp_df,
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
library(highcharter)
install.packages("highcharter")
library(highcharter)
hchart(temp_df, "scatter", hcaes(x = psi_dtw, y = psi_ls))
install.packages("echarts4r")
library(echarts4r)
mtcars |>
e_charts(wt) |>
e_scatter(mpg)
library(echarts4r)
temp_df |>
e_charts(psi_dtw) |>
e_scatter(psi_ls)
str(mtcars)
library(echarts4r)
mtcars |>
e_charts(wt) |>
e_scatter(mpg)
hchart(temp_df, "scatter", hcaes(x = psi_dtw, y = psi_ls)) %>%
hc_tooltip(pointFormat = "x: {point.x} <br> y: {point.y} <br> Extra: {point.extra}")
library(highcharter)
hchart(temp_df, "scatter", hcaes(x = psi_dtw, y = psi_ls)) %>%
hc_tooltip(pointFormat = "x: {point.x} <br> y: {point.y} <br> Extra: {x}")
hchart(temp_df, "scatter", hcaes(x = psi_dtw, y = psi_ls, extra = x)) %>%
hc_tooltip(pointFormat = "x: {point.x} <br> y: {point.y} <br> Extra: {point.extra}")
cor(temp_df$psi_dtw, temp_df$psi_ls)
psi_ls <- distantia::distantia_ls(
tsl = tsl
)
head(psi_ls)
help(head)
head(psi_ls, addrownums = FALSE)
head(psi_ls, keepnums = FALSE)
str(psi_ls)
psi_df <- psi_dtw |>
dplyr::select(x, y, psi) |>
dplyr::inner_join(
y = dplyr::select(psi_ls, x, y, psi),
by = c("x", "y")
) |>
dplyr::transmute(
x, y,
`psi_dtw` = round(psi.x, 3),
psi_ls = round(psi.y, 3)
)
reactable::reactable(
psi_df,
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
psi_df <- psi_df |>
dplyr::mutate(
pair = paste(x, y, sep = " - ")
)
hchart(psi_df, "scatter", hcaes(x = psi_dtw, y = psi_ls, extra = pair)) %>%
hc_tooltip(pointFormat = "x: {point.x} <br> y: {point.y} <br> Extra: {point.extra}")
library(highcharter)
psi_df <- psi_df |>
dplyr::mutate(
pair = paste(x, y, sep = " - ")
)
hchart(psi_df, "scatter", hcaes(x = psi_dtw, y = psi_ls, extra = pair)) %>%
hc_tooltip(pointFormat = "Pair: {point.extra}")
psi_df <- psi_df |>
dplyr::mutate(
pair = paste(x, y, sep = " - ")
)
highcharter::hchart(
psi_df,
"scatter") |>
highcharter::hcaes(
x = psi_dtw,
y = psi_ls,
extra = pair
) |>
highcharterhc_tooltip(pointFormat = "Pair: {point.extra}")
highcharter::hchart(
psi_df,
"scatter",
highcharter::hcaes(
x = psi_dtw,
y = psi_ls,
extra = pair
)
)  |>
highcharterhc_tooltip(pointFormat = "Pair: {point.extra}")
highcharter::hchart(
psi_df,
"scatter",
highcharter::hcaes(
x = psi_dtw,
y = psi_ls,
extra = pair
)
)  |>
highcharter::hc_tooltip(pointFormat = "Pair: {point.extra}")
library(highcharter)
library(dplyr)
psi_df <- psi_df |>
mutate(pair = paste(x, y, sep = " - "))
# Get min and max values for diagonal line
min_val <- min(c(psi_df$psi_dtw, psi_df$psi_ls), na.rm = TRUE)
max_val <- max(c(psi_df$psi_dtw, psi_df$psi_ls), na.rm = TRUE)
# Plot with diagonal line
highcharter::hchart(
psi_df,
"scatter",
highcharter::hcaes(
x = psi_dtw,
y = psi_ls,
extra = pair
)
) |>
highcharter::hc_tooltip(pointFormat = "Pair: {point.extra}") |>
highcharter::hc_title(text = "Scatterplot of psi_dtw vs psi_ls") |>
highcharter::hc_xAxis(title = list(text = "psi_dtw")) |>
highcharter::hc_yAxis(title = list(text = "psi_ls")) |>
highcharter::hc_add_series(
data = list(list(x = min_val, y = min_val), list(x = max_val, y = max_val)),
type = "line",
name = "1:1 Line",
color = "red",
dashStyle = "dash"
)
library(highcharter)
library(dplyr)
psi_df <- psi_df |>
mutate(pair = paste(x, y, sep = " - "))
# Get min and max values for diagonal line
min_val <- c(0, 0)
max_val <- c(3, 3)
# Plot with diagonal line
highcharter::hchart(
psi_df,
"scatter",
highcharter::hcaes(
x = psi_dtw,
y = psi_ls,
extra = pair
)
) |>
highcharter::hc_tooltip(pointFormat = "Pair: {point.extra}") |>
highcharter::hc_title(text = "Scatterplot of psi_dtw vs psi_ls") |>
highcharter::hc_xAxis(title = list(text = "psi_dtw")) |>
highcharter::hc_yAxis(title = list(text = "psi_ls")) |>
highcharter::hc_add_series(
data = list(list(x = min_val, y = min_val), list(x = max_val, y = max_val)),
type = "line",
name = "1:1 Line",
color = "red",
dashStyle = "dash"
)
