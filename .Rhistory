col = alpha("gray50", 0.5),
se = FALSE
) +
guides(fill = FALSE) +
labs(
x = "Lag (weeks)",
y = "Autocorrelation (Pearson)"
) +
scale_x_continuous(breaks = 1:6) +
theme_bw()
df_lags |>
tidyr::pivot_longer(
cols = starts_with("lag"),
names_to = "week"
) |>
dplyr::mutate(
week = as.numeric(gsub("lag", "", week))
) |>
ggplot() +
geom_smooth(
aes(
x = week,
y = value,
alpha = 0.5
),
col = alpha("gray50", 0.5),
se = FALSE
) +
geom_boxplot(
aes(
x = week,
y = value,
group = week
),
notch = TRUE,
fill = distantia::color_continuous(n = 6)
) +
guides(fill = FALSE) +
labs(
x = "Lag (weeks)",
y = "Autocorrelation (Pearson)"
) +
scale_x_continuous(breaks = 1:6) +
theme_bw()
df_lags |>
tidyr::pivot_longer(
cols = starts_with("lag"),
names_to = "week"
) |>
dplyr::mutate(
week = as.numeric(gsub("lag", "", week))
) |>
ggplot() +
geom_smooth(
aes(
x = week,
y = value,
alpha = 0.5
),
col = alpha("gray50", 0.5),
se = FALSE
) +
geom_boxplot(
aes(
x = week,
y = value,
group = week
),
notch = TRUE,
fill = distantia::color_continuous(n = 6),
alpha = 0.5
) +
guides(fill = FALSE) +
labs(
x = "Lag (weeks)",
y = "Autocorrelation (Pearson)"
) +
scale_x_continuous(breaks = 1:6) +
theme_bw()
df_lags |>
tidyr::pivot_longer(
cols = starts_with("lag"),
names_to = "week"
) |>
dplyr::mutate(
week = as.numeric(gsub("lag", "", week))
) |>
ggplot() +
geom_smooth(
aes(
x = week,
y = value,
alpha = 0.5
),
col = alpha("gray50", 0.5),
se = FALSE
) +
geom_boxplot(
aes(
x = week,
y = value,
group = week
),
notch = TRUE,
fill = distantia::color_continuous(n = 6),
alpha = 0.5
) +
guides(fill = FALSE, alpha = FALSE) +
labs(
x = "Lag (weeks)",
y = "Autocorrelation (Pearson)"
) +
scale_x_continuous(breaks = 1:6) +
theme_bw()
sf_stats <- dplyr::inner_join(
x = covid_counties[, "name"],
y = df_stats,
by = "name"
)
mapview::mapview(
sf_stats,
zcol = "q3",
layer.name = "Max prevalence",
label = "name",
col.regions = distantia::color_continuous()
)
tsl_smol <- distantia::tsl_subset(
tsl = tsl,
names = c("San_Francisco", "Napa", "Solano"),
time = c("2021-01-01", "2023-01-01")
)
distantia::tsl_plot(
tsl = tsl_smol,
guide = FALSE,
text_cex = 1.3
)
tsl_smol <- distantia::tsl_subset(
tsl = tsl,
names = c("Napa", "Solano", "San_Francisco"),
time = c("2021-01-01", "2023-01-01")
)
distantia::tsl_plot(
tsl = tsl_smol,
guide = FALSE,
text_cex = 1.3
)
tsl_smol |>
distantia::distantia_ls() |>
dplyr::mutate(
psi = round(psi, 3)
) |>
reactable::reactable(
resizable = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
tsl_smol |>
distantia::distantia_dtw() |>
dplyr::mutate(
psi = round(psi, 3)
) |>
reactable::reactable(
resizable = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
library(dtw)
xy_dtw <- dtw::dtw(
x = tsl_smol$Solano$prevalence,
y = tsl_smol$San_Francisco$prevalence,
keep = TRUE
)
dtw::dtwPlotTwoWay(xy_dtw, offset = 0.5)
library(dtw)
xy_dtw <- dtw::dtw(
x = tsl_smol$Solano$prevalence,
y = tsl_smol$San_Francisco$prevalence,
keep = TRUE,
xlab = "Sample index"
)
dtw::dtwPlotTwoWay(xy_dtw, offset = 0.5)
library(dtw)
xy_dtw <- dtw::dtw(
x = tsl_smol$Solano$prevalence,
y = tsl_smol$San_Francisco$prevalence,
keep = TRUE
)
dtw::dtwPlotTwoWay(
xy_dtw,
offset = 0.5,
xlab = "Sample index"
)
library(dtw)
xy_dtw <- dtw::dtw(
x = tsl_smol$Solano$prevalence,
y = tsl_smol$San_Francisco$prevalence,
keep = TRUE
)
dtw::dtwPlotTwoWay(
xy_dtw,
offset = 0.5,
xlab = "Sample index",
ylab = "Prevalence"
)
library(dtw)
xy_dtw <- dtw::dtw(
x = tsl_smol$Solano$prevalence,
y = tsl_smol$San_Francisco$prevalence,
keep = TRUE
)
dtw::dtwPlotTwoWay(
xy_dtw,
offset = 0.5,
xlab = "Sample index",
ylab = "Prevalence",
main = "DTW San Francisco - Napa"
)
library(dtw)
xy_dtw <- dtw::dtw(
x = tsl_smol$Solano$prevalence,
y = tsl_smol$San_Francisco$prevalence,
keep = TRUE
)
dtw::dtwPlotTwoWay(
xy_dtw,
offset = 0.5,
xlab = "Sample index",
ylab = "Prevalence",
main = "DTW alignment: San Francisco vs. Napa"
)
df_psi_ls <- distantia::distantia_ls(
tsl = tsl
)
str(df_psi_ls)
df_psi_dtw <- distantia::distantia_dtw(
tsl = tsl
)
str(df_psi_dtw)
df_table <- df_psi_dtw |>
dplyr::select(x, y, psi) |>
dplyr::inner_join(
y = dplyr::select(df_psi_ls, x, y, psi),
by = c("x", "y")
) |>
dplyr::transmute(
x, y,
`psi_dtw` = round(psi.x, 3),
psi_ls = round(psi.y, 3)
)
reactable::reactable(
df_table,
pagination = TRUE,
searchable = TRUE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = 10,
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = FALSE
)
correlation <- stats::cor(df_table$psi_dtw, df_table$psi_ls)
df_table$difference <- abs(df_table$psi_ls -  df_table$psi_dtw)
ggplot(df_table) +
aes(
x = psi_dtw,
y = psi_ls,
color = difference
) +
geom_point(
alpha = 0.75
) +
geom_smooth(
method = "lm",
col = "gray20",
formula = y ~ x
) +
geom_abline(
intercept = 0,
slope = 1,
col = "gray50",
lty = 2
) +
labs(
title = paste("Pearson Correlation between DTW and LS:", round(correlation, 2)),
x = "Psi score - Dynamic Time Warping",
y = "Psi score - Lock-Step",
color = "Difference\nLS - DTW"
) +
theme_bw()
correlation <- stats::cor(df_table$psi_dtw, df_table$psi_ls)
df_table$difference <- abs(df_table$psi_ls -  df_table$psi_dtw)
ggplot(df_table) +
aes(
x = psi_dtw,
y = psi_ls,
color = difference
) +
geom_point(
alpha = 0.75
) +
scale_color_continuous(
distantia::color_continuous(n = 100)
) +
geom_smooth(
method = "lm",
col = "gray20",
formula = y ~ x
) +
geom_abline(
intercept = 0,
slope = 1,
col = "gray50",
lty = 2
) +
labs(
title = paste("Pearson Correlation between DTW and LS:", round(correlation, 2)),
x = "Psi score - Dynamic Time Warping",
y = "Psi score - Lock-Step",
color = "Difference\nLS - DTW"
) +
theme_bw()
help(scale_color_continuous)
correlation <- stats::cor(df_table$psi_dtw, df_table$psi_ls)
df_table$difference <- abs(df_table$psi_ls -  df_table$psi_dtw)
ggplot(df_table) +
aes(
x = psi_dtw,
y = psi_ls,
color = difference
) +
geom_point(
alpha = 0.75
) +
geom_smooth(
method = "lm",
col = "gray20",
formula = y ~ x
) +
geom_abline(
intercept = 0,
slope = 1,
col = "gray50",
lty = 2
) +
labs(
title = paste("Pearson Correlation between DTW and LS:", round(correlation, 2)),
x = "Psi score - Dynamic Time Warping",
y = "Psi score - Lock-Step",
color = "Difference\nLS - DTW"
) +
theme_bw()
correlation <- stats::cor(df_table$psi_dtw, df_table$psi_ls)
df_table$difference <- abs(df_table$psi_ls -  df_table$psi_dtw)
ggplot(df_table) +
aes(
x = psi_dtw,
y = psi_ls,
color = difference
) +
geom_point(
alpha = 0.75
) +
geom_smooth(
method = "lm",
col = "gray20",
formula = y ~ x
) +
geom_abline(
intercept = 0,
slope = 1,
col = "gray50",
lty = 2
) +
scale_color_gradientn(
colors = distantia::color_continuous()
) +
labs(
title = paste("Pearson Correlation between DTW and LS:", round(correlation, 2)),
x = "Psi score - Dynamic Time Warping",
y = "Psi score - Lock-Step",
color = "Difference\nLS - DTW"
) +
theme_bw()
correlation <- stats::cor(df_table$psi_dtw, df_table$psi_ls)
df_table$difference <- abs(df_table$psi_ls -  df_table$psi_dtw)
ggplot(df_table) +
aes(
x = psi_dtw,
y = psi_ls,
color = difference
) +
geom_point(
alpha = 0.75
) +
geom_smooth(
method = "lm",
col = "gray20",
formula = y ~ poly(x, degree = 2, raw = TRUE)
) +
geom_abline(
intercept = 0,
slope = 1,
col = "gray50",
lty = 2
) +
scale_color_gradientn(
colors = distantia::color_continuous()
) +
labs(
title = paste("Pearson Correlation between DTW and LS:", round(correlation, 2)),
x = "Psi score - Dynamic Time Warping",
y = "Psi score - Lock-Step",
color = "Difference\nLS - DTW"
) +
theme_bw()
correlation <- stats::cor(df_table$psi_dtw, df_table$psi_ls)
df_table$difference <- abs(df_table$psi_ls -  df_table$psi_dtw)
ggplot(df_table) +
aes(
x = psi_dtw,
y = psi_ls,
color = difference
) +
geom_point(
alpha = 0.75
) +
geom_smooth(
method = mgcv::gam,
col = "gray20",
formula = y ~ s(x, k = 3)
) +
geom_abline(
intercept = 0,
slope = 1,
col = "gray50",
lty = 2
) +
scale_color_gradientn(
colors = distantia::color_continuous()
) +
labs(
title = paste("Pearson Correlation between DTW and LS:", round(correlation, 2)),
x = "Psi score - Dynamic Time Warping",
y = "Psi score - Lock-Step",
color = "Difference\nLS - DTW"
) +
theme_bw()
correlation <- stats::cor(df_table$psi_dtw, df_table$psi_ls)
df_table$difference <- abs(df_table$psi_ls -  df_table$psi_dtw)
ggplot(df_table) +
aes(
x = psi_dtw,
y = psi_ls,
color = difference
) +
geom_point(
alpha = 0.75
) +
geom_smooth(
method = mgcv::gam,
col = "gray20",
formula = y ~ s(x)
) +
geom_abline(
intercept = 0,
slope = 1,
col = "gray50",
lty = 2
) +
scale_color_gradientn(
colors = distantia::color_continuous()
) +
labs(
title = paste("Pearson Correlation between DTW and LS:", round(correlation, 2)),
x = "Psi score - Dynamic Time Warping",
y = "Psi score - Lock-Step",
color = "Difference\nLS - DTW"
) +
theme_bw()
df_psi_stats <- distantia::distantia_stats(
df = df_psi
)
df_psi <- df_psi_dtw
df_psi_stats <- distantia::distantia_stats(
df = df_psi
)
reactable::reactable(
df_psi_stats |>
mutate_if(is.numeric, round, 3),
pagination = FALSE,
sortable = TRUE,
showSortable = TRUE,
filterable = TRUE,
resizable = TRUE,
defaultPageSize = nrow(df_psi_stats),
showPageSizeOptions = TRUE,
striped = TRUE,
compact = TRUE,
wrap = FALSE,
fullWidth = TRUE
)
library(blogdown)
blogdown:::preview_site()
blogdown:::preview_site()
